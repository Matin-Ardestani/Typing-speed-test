# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'typing-test.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QWidget
import random
from time import sleep

counter = 60
class Ui_TestWindow(object):
    words_list = ['day', 'more', 'her', 'we', 'took', 'give', 'large', 'end', 'other', 'left', 'read', 'because', 'most', 'letter', 'land', 'soon', 'had', 'men', 'saw', 'from', 'that', 'try', 'does', 'later', 'such', 'put', 'about', 'try', 'away', 'children', 'once', 'under', 'night', 'still', 'under', 'country', 'get', 'grow', 'read', 'could', 'never', 'second', 'try', 'her', 'find', 'light', 'those', 'day', 'left', 'white', 'only', 'place', 'group', 'this', 'earth', 'may', 'plant', 'add', 'like', 'small', 'again', 'around', 'find', 'begin', 'get', 'in', 'should', 'men', 'him', 'fall', 'still', 'world', 'why', 'turn', 'few', 'little', 'new', 'about', 'paper', 'ask', 'then', 'school', 'story', 'turn', 'along', 'every', 'is', 'little', 'see', 'began', 'thought', 'been', 'and', 'out', 'see', 'land', 'run', 'those', 'talk', 'she', 'often', 'story', 'fall', 'might', 'black', 'family', 'them', 'animal', 'old', 'large', 'two', 'make', 'often', 'example', 'its', 'something', 'well', 'say', 'food', 'little', 'take', 'important', 'for', 'study', 'another', 'more', 'call', 'once', 'spell', 'live', 'find', 'any', 'study', 'hear', 'will', 'book', 'thought', 'need', 'come', 'this', 'find', 'on', 'river', 'left', 'important', 'big', 'did', 'point', 'new', 'start', 'house', 'change', 'also', 'his', 'girl', 'call', 'very', 'us', 'house', 'work', 'work', 'read', 'thought', 'not', 'river', 'say', 'should', 'them', 'or', 'food', 'father', 'earth', 'around', 'to', 'up', 'well', 'him', 'idea', 'carry', 'old', 'at', 'leave', 'city', 'both', 'show', 'life', 'open', 'from', 'this', 'put', 'on', 'almost', 'fall', 'by', 'head', 'try', 'be', 'after', 'use', 'or', 'me', 'would', 'far', 'eat', 'more', 'look', 'air', 'it', 'once', 'not', 'too', 'not', 'old', 'again', 'did', 'time', 'girl', 'we', 'sun', 'kind', 'man', 'boy', 'got', 'little', 'stop', 'time', 'year', 'still', 'their', 'near', 'most', 'each', 'began', 'may', 'not', 'own', 'list', 'well', 'upon', 'spell', 'some', 'look', 'family', 'keep', 'great', 'begin', 'family', 'group', 'start', 'grow', 'something', 'because', 'these', 'back', 'carry', 'mile', 'begin', 'three', 'line', 'two', 'upon', 'add', 'found', 'about', 'open', 'write', 'which', 'seem', 'it', 'we']
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(769, 481)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 #60a665, stop:1#4199be);\n"
"border-radius: 15px;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")






        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 45, 751, 421))
        self.frame.setStyleSheet("background: none;")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.words = QtWidgets.QLabel(self.frame)
        self.words.setGeometry(QtCore.QRect(80, 124, 621, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(15)
        self.words.setFont(font)
        self.words.setStyleSheet("background: rgb(179, 212, 214);\n"
"border-radius: 10px;")
        self.words.setObjectName("words")
        self.en = QtWidgets.QLineEdit(self.frame)
        self.en.setGeometry(QtCore.QRect(91, 230, 491, 41))
        self.en.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.en.setStyleSheet("background: rgb(179, 212, 214);\n"
"border-radius: 5px;")
        self.en.setObjectName("en")
        self.restart = QtWidgets.QPushButton(self.frame)
        self.restart.setGeometry(QtCore.QRect(600, 227, 61, 51))
        self.restart.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.restart.setStyleSheet("background: none;")
        self.restart.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../images/again.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.restart.setIcon(icon1)
        self.restart.setIconSize(QtCore.QSize(80, 80))
        self.restart.setObjectName("restart")
        self.typethis = QtWidgets.QLabel(self.frame)
        self.typethis.setGeometry(QtCore.QRect(180, 54, 381, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.typethis.setFont(font)
        self.typethis.setStyleSheet("background: rgb(179, 212, 214);\n"
"border-radius: 10px;")
        self.typethis.setAlignment(QtCore.Qt.AlignCenter)
        self.typethis.setObjectName("typethis")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(30, 310, 691, 111))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setGeometry(QtCore.QRect(10, 23, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        self.label_4.setGeometry(QtCore.QRect(221, 23, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(505, 0, 67, 17))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.result = QtWidgets.QLabel(self.frame_2)
        self.result.setGeometry(QtCore.QRect(460, 23, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Sawasdee")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.result.setFont(font)
        self.result.setStyleSheet("color: rgb(92, 53, 102);")
        self.result.setAlignment(QtCore.Qt.AlignCenter)
        self.result.setObjectName("result")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(466, 83, 141, 20))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(8)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.Cwords = QtWidgets.QLabel(self.frame_2)
        self.Cwords.setGeometry(QtCore.QRect(135, 18, 61, 31))
        self.Cwords.setStyleSheet("color:rgb(32, 74, 135);")
        self.Cwords.setObjectName("Cwords")
        self.Wletters = QtWidgets.QLabel(self.frame_2)
        self.Wletters.setGeometry(QtCore.QRect(342, 57, 61, 31))
        self.Wletters.setStyleSheet("color:rgb(164, 0, 0);")
        self.Wletters.setObjectName("Wletters")
        self.Cletters = QtWidgets.QLabel(self.frame_2)
        self.Cletters.setGeometry(QtCore.QRect(345, 19, 61, 31))
        self.Cletters.setStyleSheet("color:rgb(32, 74, 135);")
        self.Cletters.setObjectName("Cletters")
        self.Wwords = QtWidgets.QLabel(self.frame_2)
        self.Wwords.setGeometry(QtCore.QRect(131, 59, 61, 31))
        self.Wwords.setStyleSheet("color:rgb(164, 0, 0);")
        self.Wwords.setObjectName("Wwords")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(40, 53, 171, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(430, 10, 341, 71))
        self.frame_3.setStyleSheet("background: none;")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.btnexit = QtWidgets.QPushButton(self.frame_3)
        self.btnexit.setGeometry(QtCore.QRect(290, 10, 30, 30))
        self.btnexit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btnexit.setStyleSheet("background: rgb(179, 212, 214);\n"
"border-radius: 10px;")
        self.btnexit.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../images/close.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnexit.setIcon(icon2)
        self.btnexit.setIconSize(QtCore.QSize(20, 20))
        self.btnexit.setObjectName("btnexit")
        self.btnmin = QtWidgets.QPushButton(self.frame_3)
        self.btnmin.setGeometry(QtCore.QRect(251, 10, 30, 30))
        self.btnmin.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btnmin.setStyleSheet("background: rgb(179, 212, 214);\n"
"border-radius: 10px;")
        self.btnmin.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../images/minimize.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btnmin.setIcon(icon3)
        self.btnmin.setIconSize(QtCore.QSize(20, 20))
        self.btnmin.setObjectName("btnmin")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(28, 14, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color:rgb(136, 138, 133);\n"
"color: #fff;")
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.btnexit.clicked.connect(MainWindow.close)
        self.btnmin.clicked.connect(MainWindow.showMinimized)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Typing Test"))
        self.words.setText(_translate("MainWindow", "typing words"))
        self.typethis.setText(_translate("MainWindow", "Type this word"))
        self.label_3.setText(_translate("MainWindow", "Correct words:\n"
"\n"
"Wrong words:"))
        self.label_4.setText(_translate("MainWindow", "Correct letters:\n"
"\n"
"Wrong letters:"))
        self.label_5.setText(_translate("MainWindow", "Result:"))
        self.result.setText(_translate("MainWindow", "50 WPM"))
        self.label_7.setText(_translate("MainWindow", "(word per minute)"))
        self.Cwords.setText(_translate("MainWindow", "TextLabel"))
        self.Wletters.setText(_translate("MainWindow", "TextLabel"))
        self.Cletters.setText(_translate("MainWindow", "TextLabel"))
        self.Wwords.setText(_translate("MainWindow", "TextLabel"))
        self.label.setText(_translate("MainWindow", "Type this word:"))
        self.pushButton.setText(_translate("MainWindow", "60"))

        # my codes    
        self.typing_words = ''
        for i in range(200):
            self.typing_words += self.words_list[random.randint(0 ,len(self.words_list) - 1)] + ' '
        
        self.tw_list = self.typing_words.split()
        self.words.setText(self.typing_words)
        self.typethis.setText(self.tw_list[0])


        self.en.returnPressed.connect(self.check)
        self.correct_words = 0
        self.wrong_words = 0
        self.correct_letters = 0
        self.wrong_letter = 0

        self.restart.clicked.connect(self.timming)
        self.en.setEnabled(False)
        self.en.setPlaceholderText('Type here...')

        self.Cwords.setText('')
        self.Wwords.setText('')
        self.Cletters.setText('')
        self.Wletters.setText('')
        self.result.setText('')

    def check(self):
            def check_word():
                the_word = self.tw_list[0]
                en_word = self.en.text().strip()
                if en_word == the_word:
                    self.correct_words += 1
                    self.correct_letters += len(the_word)
                else:
                    self.wrong_words += 1
                    if len(en_word) == len(the_word):
                        counter = -1
                        for i in the_word:
                            counter += 1
                            if the_word[counter] == en_word[counter]:
                                self.correct_letters += 1
                            else:
                                self.wrong_letter += 1
                    else:
                        diff = abs(len(en_word) - len(the_word))
                        if len(en_word) > len(the_word):
                            counter = -1
                            for i in the_word:
                                counter += 1
                                if the_word[counter] == en_word[counter]:
                                    self.correct_letters += 1
                                else:
                                    self.wrong_letter += 1
                            self.wrong_letter += diff
                        else:
                            counter = -1
                            for i in en_word:
                                counter += 1
                                if the_word[counter] == en_word[counter]:
                                    self.correct_letters += 1
                                else:
                                    self.wrong_letter += 1

            check_word()

            if len(self.tw_list) > 1:
                self.tw_list.pop(0)
                counter = -1
                for this in self.typing_words:
                    counter += 1
                    if this == ' ':
                        self.typing_words = self.typing_words[(counter + 1):]
                        break
            else:
                self.typing_words = ''
                for i in range(200):
                    self.typing_words += self.words_list[random.randint(0 ,len(self.words_list) - 1)] + ' '
        
                self.tw_list = self.typing_words.split()

            self.words.setText(self.typing_words)
            self.typethis.setText(self.tw_list[0])

            self.en.setText('')

    def second(self):
        global counter
        self.pushButton.setText(str(counter))
        if counter == 0:
            self.time.stop()
            self.en.setEnabled(False)
            self.restart.setEnabled(True)
            if self.en.text() != '':
                self.check()

            counter = 0

            self.typethis.setText('')
            self.words.setText('')
            self.en.setText('')
            
            # results
            self.Cwords.setText('%s words' % self.correct_words)
            self.Wwords.setText('%s words' % self.wrong_words)
            self.Cletters.setText('%s letters' % self.correct_letters)
            self.Wletters.setText('%s letters' % self.wrong_letter)

            # formula = (characters / 5) / 1 min
            wpm = (self.correct_letters / 5) / 1

            self.result.setText('%s WPM' % int(wpm))

            self.correct_words = 0
            self.wrong_words = 0
            self.correct_letters = 0
            self.wrong_letter = 0


            self.typing_words = ''
            for i in range(200):
                self.typing_words += self.words_list[random.randint(0 ,len(self.words_list) - 1)] + ' '

            return 0
        counter -= 1


    def timming(self):
        self.tw_list = self.typing_words.split()
        self.words.setText(self.typing_words)
        self.typethis.setText(self.tw_list[0])
        self.Cwords.setText('')
        self.Wwords.setText('')
        self.Cletters.setText('')
        self.Wletters.setText('')
        self.result.setText('')
        self.restart.setEnabled(False)
        global counter
        counter = 60
        self.en.setEnabled(True)
        self.en.setFocus(True)
        self.time = QtCore.QTimer()
        self.time.timeout.connect(self.second)
        self.time.start(1000)